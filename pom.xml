<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.sos-berlin.administration.maven</groupId>
        <artifactId>company-pom</artifactId>
        <version>1.7.4178</version>
    </parent>

    <version>1.7.5-SNAPSHOT</version>
    <groupId>com.sos-berlin</groupId>
    <artifactId>products</artifactId>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>
    <inceptionYear>2014</inceptionYear>

    <scm>
        <connection>scm:git:git@github.com:sos-berlin/all.git</connection>
        <developerConnection>scm:git:git@github.com:sos-berlin/all.git</developerConnection>
        <url>https://github.com/sos-berlin/all</url>
    </scm>

    <properties>

        <!-- To deploy the aggregated sources into the release repository set -Dsource-repo=sos-release -->
        <source.repo>snapshots</source.repo>

        <base.url>http://subversion.sos/svn/sos/java.sources</base.url>

        <setup.version.timekey>unknown</setup.version.timekey>

        <project.base.path>${project.artifactId}</project.base.path>

        <!-- The current encoding properties - should be changed to UTF-8 -->
        <project.build.sourceEncoding>Cp1252</project.build.sourceEncoding>
        <project.reporting.outputEncoding>Cp1252</project.reporting.outputEncoding>

        <sos.engine.version>1.7.4</sos.engine.version>

        <!-- The version number to build the legacy jar files for the old ant controlled build -->
        <legacy.setup.version>1.7</legacy.setup.version>

        <!--
        Solange die jar files auf r2d2 in die Verzeichnisse lib_release_unversioned_jar und lib-release_jar kopiert werden, ist in jedem Projekt
        dessen jar in diese Verzeichniss kopiert werden soll diese Eigenschaft auf false zu setzen.
        -->
        <setup.do.not.deploy>true</setup.do.not.deploy>
        <setup.target.name>unknown-target-name</setup.target.name>

        <!-- Properties for deploying the jar files to the old folder layout -->
        <setup.target.base>r:/backup/sos/java</setup.target.base>
        <setup.target.jars>${setup.target.base}/lib_release_jar/${setup.version.timekey}</setup.target.jars>
        <setup.target.lib>${setup.target.base}/lib</setup.target.lib>
        <setup.target.lib.unversioned>${setup.target.base}/lib_release_unversioned_jar</setup.target.lib.unversioned>
        <setup.target.sources>${setup.target.base}/lib_release_sources_jar/${setup.version.timekey}
        </setup.target.sources>

        <setup.target.name>jobscheduler.sources</setup.target.name>

    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- The projects basedir can get with System.getProperty("project.dir") -->
                    <systemPropertyVariables>
                        <project.dir>${project.basedir}</project.dir>
                    </systemPropertyVariables>
                    <excludes>
                        <!-- oh 15.04.13 test laeuft endlos -->
                        <exclude>/sos/scheduler/LaunchAndObserve/*LaunchAndObserveJUnitTest.java</exclude>
                        <!-- oh 15.04.13 test laeuft 5min -->
                        <exclude>/sos/scheduler/LaunchAndObserve/LaunchAndObserveTest.java</exclude>
                        <!-- oh 16.04.13 test haengt -->
                        <exclude>sos/scheduler/db/SOSSQLPlusJobJUnitTest.java</exclude>
                        <!-- oh 06.05.14 test crashed: Exception in thread "main" java.lang.OutOfMemoryError: Java heap space -->
                        <exclude>/com/sos/DataExchange/JadeTestJCraftsFtp.java</exclude>
                        <!-- oh 18.04.14 No runnable methods -->
                        <exclude>/com/sos/DataExchange/JadeTestBase.java</exclude>
                        <!-- oh 18.04.14 No runnable methods -->
                        <exclude>/sos/scheduler/checkrun/CheckRunJUnitTest.java</exclude>
                        <!-- oh 18.04.14 No runnable methods -->
                        <exclude>/sos/ftphistory/db/TestJadeFilesHistorie.java</exclude>
                        <!-- oh 18.04.14 No runnable methods -->
                        <exclude>
                            /com/sos/VirtualFileSystem/TransferHistoryExport/JadeTransferDetailHistoryExportDataTest.java
                        </exclude>
                        <exclude>
                            /com/sos/VirtualFileSystem/TransferHistoryExport/JadeTransferHistoryExportDataTest.java
                        </exclude>
                        <!-- oh 07.04.14 deprecated -->
                        <exclude>/sos/scheduler/InstallationService/JSBatchInstallerJUnitTest.java</exclude>
                        <!-- oh 07.05.14 No runnable methods -->
                        <exclude>/com/sos/scheduler/model/test/TestLoadSchedulerXMLMain.java</exclude>
                        <!-- oh 07.05.14 test haengt? -->
                        <exclude>/sos/net/ssh/SOSSSHJob2Test.java</exclude>
                        <exclude>sos/scheduler/file/JobSchedulerFileOperationsBaseTest.java</exclude>
                        <!-- oh 15.04.13 test crashed: Exception in thread "main" java.lang.OutOfMemoryError: Java heap space -->
                        <!--exclude>**/*JadeTestFtpAsSource.java</exclude -->
                        <!-- oh 02.05.14 test crashed: Exception in thread "main" java.lang.OutOfMemoryError: Java heap space -->
                        <!--exclude>**/JadeTestCifs*.java</exclude -->
                        <!-- oh 15.04.13 test crashed: Exception in thread "main" java.lang.OutOfMemoryError: Java heap space -->
                        <!--exclude>**/*JadeTestLocal.java</exclude -->
                        <!-- oh 15.04.13 test crashed: Exception in thread "main" java.lang.OutOfMemoryError: Java heap space -->
                        <!--exclude>**/*SOSDataExchangeEngineTest.java</exclude -->
                        <!-- oh 06.05.14 test crashed: Exception in thread "main" java.lang.OutOfMemoryError: Java heap space -->
                        <!--exclude>**/JadeTestFtp*.java</exclude -->

                        <!-- sp 07.11.14 test hÃ¤ngt sich auf, wenn JobScheduler:4210 auf 8of9 nicht erreichbar ist! -->
                        <!--exclude>/com/sos/scheduler.model.SchedulerObjectFactoryTest.java</exclude-->

                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <modules>
        <module>commons</module>
        <module>commons-jobscheduler</module>
        <module>commons-graphviz</module>
        <module>joe</module>
        <module>jade</module>
        <module>jid</module>
        <module>jitl</module>
        <module>joc</module>
        <!--module>setups</module-->
    </modules>

    <profiles>

        <!-- This profile is for collecting the sources of all artifacts in one jar (in the install phase). In case of deployment the sources will also deployed -->
        <profile>
            <id>collect-sources</id>

            <build>
                <plugins>

                    <!-- Aggregate the source of all artifacts -->
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>aggregate-sources</id>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <inherited>false</inherited>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>

            </build>

        </profile>

        <!--
        Use the profile as follows:
            net use r: \\r2d2.sos\share sos /USER:sos
            set PATH=%PATH%;%SCHEDULER_PARAM_GRAPHVIZ_DIR%
            cd /D r:\backup\sos\java\scheduler_release\com.sos.sos-jar-aggregator
  mvn scm:update -Psetup -Dsetup.target.base=R:/backup/sos/java -Dsetup.version.timekey=3300 clean install
        -->
        <profile>
            <id>setup</id>
            <build>
                <plugins>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>get-legacy-build-number</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                                <configuration>
                                    <buildNumberPropertyName>legacy.build.number</buildNumberPropertyName>
                                    <doCheck>true</doCheck>
                                    <doUpdate>false</doUpdate>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>


                    <!-- put the sources jar in lib_release_sources_jar -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>deploy</phase>
                                <configuration>
                                    <target name="copy and rename file">
                                        <delete dir="${setup.target.sources}" />
                                        <delete dir="${setup.target.jars}" />
                                        <mkdir dir="${setup.target.sources}" />
                                        <copy file="${project.build.directory}/${project.artifactId}-${project.version}-sources.jar" tofile="${setup.target.sources}/${project.groupId}.${project.artifactId}.sources-${legacy.setup.version}-${setup.version.timekey}-${legacy.build.number}.jar" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- copy: copy the jars of the child artifacts to a target folder after mvn:install -->
                    <plugin>

                        <artifactId>maven-dependency-plugin</artifactId>

                        <configuration>
                            <skip>${setup.do.not.deploy}</skip>
                        </configuration>

                        <executions>


                            <!-- put the result to a versioned folder unter lib_release_jar -->
                            <execution>
                                <id>copy</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${setup.target.jars}</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <destFileName>
                                                ${setup.target.name}-${legacy.setup.version}-${setup.version.timekey}-${legacy.build.number}.jar
                                            </destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>

                            <!-- put the jar to the lib folder, too -->
                            <execution>
                                <id>copy-lib</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${setup.target.lib}</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <destFileName>${setup.target.name}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>

                            <!-- put the unversioned jar to the lib_release_unversioned_jar folder -->
                            <execution>
                                <id>copy-unversioned</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${setup.target.lib.unversioned}</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <destFileName>${setup.target.name}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>

                            </execution>

                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

    </profiles>

    <repositories>
        <repository>
            <id>eclipselink</id>
            <name>EclipseLink Repository</name>
            <url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo</url>
        </repository>
        <repository>
            <id>swt-repo</id>
            <name>swt repository</name>
            <url>http://swt-repo.googlecode.com/svn/repo/</url>
        </repository>
        <repository>
            <id>vaadin-addons</id>
            <name>Addons for Vaadin Framework</name>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.sos.scheduler.engine</groupId>
                <artifactId>engine-job-api</artifactId>
                <version>${sos.engine.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sos.scheduler.enginedoc</groupId>
                <artifactId>enginedoc-common</artifactId>
                <version>${sos.engine.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sos.scheduler.engine</groupId>
                <artifactId>kernel</artifactId>
                <version>${sos.engine.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sos.scheduler.engine</groupId>
                <artifactId>test</artifactId>
                <version>${sos.engine.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.15.0-GA</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${apache.shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-guice</artifactId>
                <version>${apache.shiro.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
